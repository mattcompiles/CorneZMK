#include <dt-bindings/zmk/mouse.h>
#include <input/processors.dtsi>
#include <behaviors.dtsi>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/pointing.h>
#include <dt-bindings/zmk/rgb.h>

/*

   &mmv_input_listener {
       input-processors = <&zip_xy_scaler 2 1>;
   };

   &msc_input_listener {
       input-processors = <&zip_xy_scaler 2 1>;
   };

 */

#define ZMK_MOUSE_DEFAULT_MOVE_VAL 1200  // 600
#define ZMK_MOUSE_DEFAULT_SCRL_VAL 20    // 10

/ {
    behaviors {
        shift_caps: shift_caps {
            compatible = "zmk,behavior-tap-dance";
            display-name = "Shift/Caps Lock Tap Dance";
            #binding-cells = <0>;
            bindings = <&kp LEFT_SHIFT>, <&kp CAPS>;

            label = "SHIFT_CAPS";
        };
    };

    rgb_encoder: rgb_encoder {
        compatible = "zmk,behavior-sensor-rotate";
        #sensor-binding-cells = <0>;
        bindings = <&rgb_ug RGB_BRI>, <&rgb_ug RGB_BRD>;
    };

    scroll_encoder: scroll_encoder {
        compatible = "zmk,behavior-sensor-rotate";
        #sensor-binding-cells = <0>;
        bindings = <&msc SCRL_DOWN>, <&msc SCRL_UP>;

        tap-ms = <30>;
    };

    keymap {
        compatible = "zmk,keymap";

        default_layer {
            display-name = "QWERTY";
            bindings = <
&kp TAB      &kp Q  &kp W  &kp E  &kp R        &kp T                                       &kp UP                &kp Y      &kp U          &kp I      &kp O    &kp P     &kp BACKSLASH
&kp ESCAPE   &kp A  &kp S  &kp D  &kp F        &kp G                             &kp LEFT  &kp ENTER  &kp RIGHT  &kp H      &kp J          &kp K      &kp L    &kp SEMI  &kp SQT
&shift_caps  &kp Z  &kp X  &kp C  &kp V        &kp B            &kp LG(LS(A))              &kp DOWN              &kp N      &kp M          &kp COMMA  &kp DOT  &kp FSLH  &none
                           &mo 3  &lt 2 SPACE  &lt 1 BACKSPACE                                                   &kp ENTER  &kp BACKSPACE  &none
            >;

            sensor-bindings = <&inc_dec_kp C_VOLUME_UP C_VOLUME_DOWN>;
        };

        number_layer {
            bindings = <
&trans  &trans  &trans  &trans  &trans  &trans                    &trans          &trans  &kp N7  &kp N8  &kp N9  &trans  &trans
&trans  &trans  &trans  &trans  &trans  &trans            &trans  &trans  &trans  &trans  &kp N4  &kp N5  &kp N6  &trans  &trans
&trans  &trans  &trans  &trans  &trans  &trans  &trans            &trans          &trans  &kp N1  &kp N2  &kp N3  &trans  &trans
                        &trans  &trans  &trans                                    &trans  &kp N0  &trans
            >;

            label = "NUMBER";
        };

        symbol_layer {
            bindings = <
&trans  &trans  &trans  &trans  &trans  &trans                    &trans          &kp EXCLAMATION  &kp LEFT_PARENTHESIS  &kp RIGHT_PARENTHESIS  &kp AMPERSAND  &kp PLUS   &kp HASH
&trans  &trans  &trans  &trans  &trans  &trans            &trans  &trans  &trans  &kp LCTRL        &kp LEFT_BRACE        &kp RIGHT_BRACE        &kp DOLLAR     &kp EQUAL  &kp AT_SIGN
&trans  &trans  &trans  &trans  &trans  &trans  &trans            &trans          &kp GRAVE        &kp LESS_THAN         &kp GREATER_THAN       &kp PERCENT    &kp TILDE  &kp ASTERISK
                        &trans  &trans  &trans                                    &trans           &trans                &trans
            >;

            label = "SYMBOL";
        };

        navigation_layer {
            bindings = <
&trans  &trans  &trans  &trans  &trans  &trans                    &trans          &kp LG(LEFT)  &kp LA(LEFT)  &kp LA(RIGHT)  &kp LG(RIGHT)  &trans  &trans
&trans  &trans  &trans  &trans  &trans  &trans            &trans  &trans  &trans  &kp LEFT      &kp DOWN      &kp UP         &kp RIGHT      &trans  &trans
&trans  &trans  &trans  &trans  &trans  &trans  &trans            &trans          &trans        &trans        &trans         &trans         &trans  &trans
                        &trans  &trans  &trans                                    &trans        &trans        &trans
            >;

            label = "NAV";
        };
    };
};
